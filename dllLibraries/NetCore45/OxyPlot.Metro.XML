<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OxyPlot.Metro</name>
    </assembly>
    <members>
        <member name="T:OxyPlot.Metro.OxyColorConverter">
            <summary>
            Converts from OxyPlot colors to Windows.UI.Color and vice versa.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.OxyColorConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            The convert.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:OxyPlot.Metro.OxyColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:OxyPlot.Metro.ThicknessConverter">
            <summary>
            Converts Thickness to double.
            </summary>
            <remarks>This is used to convert BorderThickness properties to Path.StrokeThickness (double).
            The maximum thickness value is used.</remarks>
        </member>
        <member name="M:OxyPlot.Metro.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>The maximum value of the thickness.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns>Not implemented.</returns>
        </member>
        <member name="T:OxyPlot.Metro.PlotView">
            <summary>
            Represents a control that displays a <see cref="T:OxyPlot.PlotModel"/>.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.PartGrid">
            <summary>
            The Grid PART constant.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.ControllerProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.PlotView.Controller"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.DefaultTrackerTemplateProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.PlotView.DefaultTrackerTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.HandleRightClicksProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.PlotView.HandleRightClicks"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.IsMouseWheelEnabledProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.PlotView.IsMouseWheelEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.ModelProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.PlotView.Model"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.ZoomRectangleTemplateProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.PlotView.ZoomRectangleTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.modelLock">
            <summary>
            The model lock.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.trackerDefinitions">
            <summary>
            The tracker definitions.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.canvas">
            <summary>
            The canvas.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.currentModel">
            <summary>
            The current model.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.currentTracker">
            <summary>
            The current tracker.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.grid">
            <summary>
            The grid.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.defaultController">
            <summary>
            The default controller.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.isAltPressed">
            <summary>
            The state of the Alt key.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.isWindowsPressed">
            <summary>
            The state of the Windows key.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.isControlPressed">
            <summary>
            The state of the Control key.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.isPlotInvalidated">
            <summary>
            The is PlotView invalidated.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.isShiftPressed">
            <summary>
            The is shift pressed.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.overlays">
            <summary>
            The overlays.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.renderContext">
            <summary>
            The render context
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.PlotView.zoomRectangle">
            <summary>
            The zoom control.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Metro.PlotView"/> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.HideTracker">
            <summary>
            Hides the tracker.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.HideZoomRectangle">
            <summary>
            Hides the zoom rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.InvalidatePlot(System.Boolean)">
            <summary>
            Invalidate the PlotView (not blocking the UI thread)
            </summary>
            <param name="update">if set to <c>true</c>, the data collections will be updated.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.SetCursorType(OxyPlot.CursorType)">
            <summary>
            Sets the cursor.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.ShowTracker(OxyPlot.TrackerHitResult)">
            <summary>
            Shows the tracker.
            </summary>
            <param name="trackerHitResult">The tracker data.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.ShowZoomRectangle(OxyPlot.OxyRect)">
            <summary>
            Shows the zoom rectangle.
            </summary>
            <param name="r">The rectangle.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.ToBitmap">
            <summary>
            Renders the PlotView to a bitmap.
            </summary>
            <returns>A bitmap.</returns>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OxyPlot#IPlotView#SetClipboardText(System.String)">
            <summary>
            Stores text on the clipboard.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the KeyDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the KeyUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
            <summary>
            Called before the ManipulationStarted event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Called before the ManipulationDelta event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
            <summary>
            Called before the ManipulationCompleted event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerPressed event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerMoved event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerReleased event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerWheelChanged event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerEntered event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerExited event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the Arrange pass of layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size that is used after the element is arranged in layout.</returns>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.ModelChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:OxyPlot.Metro.PlotView.Model"/> property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when the control is loaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnModelChanged">
            <summary>
            Called when the model is changed.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.OnSizeChanged(System.Object,Windows.UI.Xaml.SizeChangedEventArgs)">
            <summary>
            Called when the size of the control is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.UpdateModel(System.Boolean)">
            <summary>
            Updates the model.
            </summary>
            <param name="update">if set to <c>true</c>, the data collections will be updated.</param>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.UpdateVisuals">
            <summary>
            Updates the visuals.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.PlotView.BeginInvoke(System.Action)">
            <summary>
            Invokes the specified action on the UI Thread (without blocking the calling thread).
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.Controller">
            <summary>
            Gets or sets the PlotView controller.
            </summary>
            <value>The PlotView controller.</value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.DefaultTrackerTemplate">
            <summary>
            Gets or sets the default tracker template.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.HandleRightClicks">
            <summary>
            Gets or sets a value indicating whether to handle right clicks.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.IsMouseWheelEnabled">
            <summary>
            Gets or sets a value indicating whether IsMouseWheelEnabled.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.Model">
            <summary>
            Gets or sets the <see cref="T:OxyPlot.PlotModel"/> to show.
            </summary>
            <value>The <see cref="T:OxyPlot.PlotModel"/>.</value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.ZoomRectangleTemplate">
            <summary>
            Gets or sets the zoom rectangle template.
            </summary>
            <value>The zoom rectangle template.</value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.TrackerDefinitions">
            <summary>
            Gets the tracker definitions.
            </summary>
            <value>The tracker definitions.</value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.OxyPlot#IView#ActualModel">
            <summary>
            Gets the actual model in the view.
            </summary>
            <value>
            The actual model.
            </value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.ActualModel">
            <summary>
            Gets the actual model.
            </summary>
            <value>The actual model.</value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.OxyPlot#IView#ActualController">
            <summary>
            Gets the actual controller.
            </summary>
            <value>
            The actual <see cref="T:OxyPlot.IController"/>.
            </value>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.ClientArea">
            <summary>
            Gets the coordinates of the client area of the view.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.PlotView.ActualController">
            <summary>
            Gets the actual PlotView controller.
            </summary>
            <value>The actual PlotView controller.</value>
        </member>
        <member name="T:OxyPlot.Metro.ConverterExtensions">
            <summary>
            Extension method used to convert to/from Windows/Windows.Media classes.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.DistanceTo(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Calculate the distance between two points.
            </summary>
            <param name="p1">The first point.</param>
            <param name="p2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToBrush(OxyPlot.OxyColor)">
            <summary>
            Converts a <see cref="T:OxyPlot.OxyColor"/> to a <see cref="T:Windows.UI.Xaml.Media.Brush"/>.
            </summary>
            <param name="c">The color.</param>
            <returns>A SolidColorBrush.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToColor(OxyPlot.OxyColor)">
            <summary>
            Converts an <see cref="T:OxyPlot.OxyColor"/> to a <see cref="T:Windows.UI.Color"/>.
            </summary>
            <param name="c">The color.</param>
            <returns>A <see cref="T:Windows.UI.Color"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToHorizontalTextAlign(Windows.UI.Xaml.HorizontalAlignment)">
            <summary>
            Converts a <see cref="T:Windows.UI.Xaml.HorizontalAlignment"/> to a <see cref="T:OxyPlot.HorizontalAlignment"/>.
            </summary>
            <param name="alignment">The alignment.</param>
            <returns>A <see cref="T:OxyPlot.HorizontalAlignment"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToOxyColor(Windows.UI.Color)">
            <summary>
            Converts a <see cref="T:Windows.UI.Color"/> to an <see cref="T:OxyPlot.OxyColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>An <see cref="T:OxyPlot.OxyColor"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToOxyColor(System.Nullable{Windows.UI.Color})">
            <summary>
            Converts a <see cref="T:System.Nullable`1"/> to an <see cref="T:OxyPlot.OxyColor"/>.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>The converted color, or <see cref="F:OxyPlot.OxyColors.Undefined"/> if the <paramref name="color"/> is <c>null</c>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToOxyColor(Windows.UI.Xaml.Media.Brush)">
            <summary>
            Converts a <see cref="T:Windows.UI.Xaml.Media.SolidColorBrush"/> to an <see cref="T:OxyPlot.OxyColor"/>.
            </summary>
            <param name="brush">The brush to convert.</param>
            <returns>An <see cref="T:OxyPlot.OxyColor"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToOxyThickness(Windows.UI.Xaml.Thickness)">
            <summary>
            Converts a <see cref="T:Windows.UI.Xaml.Thickness"/> to an <see cref="T:OxyPlot.OxyThickness"/>.
            </summary>
            <param name="t">The thickness.</param>
            <returns>An <see cref="T:OxyPlot.OxyThickness"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Converts a <see cref="T:OxyPlot.ScreenPoint"/> to a <see cref="T:Windows.Foundation.Point"/>.
            </summary>
            <param name="pt">The point to convert.</param>
            <param name="aliased">Use pixel alignment conversion if set to <c>true</c>.</param>
            <returns>A point.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToRect(OxyPlot.OxyRect,System.Boolean)">
            <summary>
            Converts an <see cref="T:OxyPlot.OxyRect"/> to a <see cref="T:Windows.Foundation.Rect"/>.
            </summary>
            <param name="r">The rectangle to convert.</param>
            <param name="aliased">Use pixel alignment if set to <c>true</c>.</param>
            <returns>The converted rectangle.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.GetPressedMouseButton(Windows.UI.Input.PointerPointProperties)">
            <summary>
            Gets the pressed mouse button from the specified <see cref="T:Windows.UI.Input.PointerPointProperties"/>.
            </summary>
            <param name="properties">The properties.</param>
            <returns>The pressed mouse button.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToMouseDownEventArgs(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Converts <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> to <see cref="T:OxyPlot.OxyMouseEventArgs"/> for a mouse down event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
            <param name="relativeTo">The <see cref="T:Windows.UI.Xaml.UIElement"/> that the event is relative to.</param>
            <returns>A <see cref="T:OxyPlot.OxyMouseDownEventArgs"/> containing the converted event arguments.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToMouseEventArgs(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Converts <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> to <see cref="T:OxyPlot.OxyMouseEventArgs"/> for a mouse event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
            <param name="relativeTo">The <see cref="T:Windows.UI.Xaml.UIElement"/> that the event is relative to.</param>
            <returns>A <see cref="T:OxyPlot.OxyMouseEventArgs"/> containing the converted event arguments.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToMouseWheelEventArgs(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Converts <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> to <see cref="T:OxyPlot.OxyMouseWheelEventArgs"/> for a mouse wheel event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
            <param name="relativeTo">The <see cref="T:Windows.UI.Xaml.UIElement"/> that the event is relative to.</param>
            <returns>A <see cref="T:OxyPlot.OxyMouseWheelEventArgs"/> containing the converted event arguments.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToTouchEventArgs(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Converts <see cref="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs"/> to <see cref="T:OxyPlot.OxyMouseEventArgs"/> for a touch started event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs"/> instance containing the event data.</param>
            <param name="relativeTo">The <see cref="T:Windows.UI.Xaml.UIElement"/> that the event is relative to.</param>
            <returns>A <see cref="T:OxyPlot.OxyMouseEventArgs"/> containing the converted event arguments.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToTouchEventArgs(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Converts <see cref="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"/> to <see cref="T:OxyPlot.OxyMouseEventArgs"/> for a touch delta event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"/> instance containing the event data.</param>
            <param name="relativeTo">The <see cref="T:Windows.UI.Xaml.UIElement"/> that the event is relative to.</param>
            <returns>A <see cref="T:OxyPlot.OxyMouseEventArgs"/> containing the converted event arguments.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToTouchEventArgs(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Converts <see cref="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"/> to <see cref="T:OxyPlot.OxyMouseEventArgs"/> for a touch completed event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"/> instance containing the event data.</param>
            <param name="relativeTo">The <see cref="T:Windows.UI.Xaml.UIElement"/> that the event is relative to.</param>
            <returns>A <see cref="T:OxyPlot.OxyMouseEventArgs"/> containing the converted event arguments.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.GetModifierKeys(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Gets the modifier keys.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
            <returns>Modifier keys.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.Convert(Windows.System.VirtualKey)">
            <summary>
            Converts the specified key to an <see cref="T:OxyPlot.OxyKey"/>.
            </summary>
            <param name="k">The key to convert.</param>
            <returns>The converted key.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToScreenPoint(Windows.Foundation.Point)">
            <summary>
            Converts a <see cref="T:Windows.Foundation.Point"/> to a <see cref="T:OxyPlot.ScreenPoint"/>.
            </summary>
            <param name="pt">The point to convert.</param>
            <returns>A <see cref="T:OxyPlot.ScreenPoint"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToScreenVector(Windows.Foundation.Point)">
            <summary>
            Converts a <see cref="T:Windows.Foundation.Point"/> to a <see cref="T:OxyPlot.ScreenVector"/>.
            </summary>
            <param name="pt">The vector to convert.</param>
            <returns>A <see cref="T:OxyPlot.ScreenVector"/>.</returns>
        </member>
        <member name="M:OxyPlot.Metro.ConverterExtensions.ToScreenPointArray(Windows.Foundation.Point[])">
            <summary>
            Converts a <see cref="T:Windows.Foundation.Point"/> array to a <see cref="T:OxyPlot.ScreenPoint"/> array.
            </summary>
            <param name="points">The points.</param>
            <returns>A <see cref="T:OxyPlot.ScreenPoint"/> array.</returns>
        </member>
        <member name="T:OxyPlot.Metro.MouseButtonHelper">
            <summary>
            Mouse button helper
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MouseButtonHelper.DoubleClickSpeed">
            <summary>
            The double click speed.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MouseButtonHelper.MaxMoveDistance">
            <summary>
            The max move distance.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MouseButtonHelper.lastClickTicks">
            <summary>
            The last click ticks.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MouseButtonHelper.lastPosition">
            <summary>
            The last position.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MouseButtonHelper.lastSender">
            <summary>
            The last sender.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.MouseButtonHelper.IsDoubleClick(System.Object,Windows.Foundation.Point)">
            <summary>
            Determines whether the last click is a double click.
            </summary>
            <param name="sender">The sender.</param>
            <param name="position">The position.</param>
            <returns>True if the click was a double click.</returns>
        </member>
        <member name="M:OxyPlot.Metro.MouseButtonHelper.Distance(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Calculates the distance.
            </summary>
            <param name="pointA">The point a.</param>
            <param name="pointB">The point b.</param>
            <returns>The distance.</returns>
        </member>
        <member name="T:OxyPlot.Metro.Plot">
            <summary>
            Represents a control that displays a <see cref="T:OxyPlot.PlotModel"/>.
            </summary>
        </member>
        <member name="T:OxyPlot.Metro.MetroRenderContext">
            <summary>
            Rendering Metro shapes to a Canvas
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MetroRenderContext.brushCache">
            <summary>
            The brush cache.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MetroRenderContext.canvas">
            <summary>
            The canvas.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MetroRenderContext.imagesInUse">
            <summary>
            The images in use
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MetroRenderContext.imageCache">
            <summary>
            The image cache
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.MetroRenderContext.clip">
            <summary>
            The clip rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.#ctor(Windows.UI.Xaml.Controls.Canvas)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Metro.MetroRenderContext"/> class.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawEllipse(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="rect">The rectangle defining the ellipse.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawEllipses(System.Collections.Generic.IList{OxyPlot.OxyRect},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double)">
            <summary>
            The draw ellipses.
            </summary>
            <param name="rectangles">The rectangles.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,System.Double[],OxyPlot.OxyPenLineJoin,System.Boolean)">
            <summary>
            The draw line.
            </summary>
            <param name="points">The points.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">The aliased.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawLineSegments(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,System.Double[],OxyPlot.OxyPenLineJoin,System.Boolean)">
            <summary>
            The draw line segments.
            </summary>
            <param name="points">The points.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">The aliased.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,System.Double[],OxyPlot.OxyPenLineJoin,System.Boolean)">
            <summary>
            The draw polygon.
            </summary>
            <param name="points">The points.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">The aliased.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawPolygons(System.Collections.Generic.IList{System.Collections.Generic.IList{OxyPlot.ScreenPoint}},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,System.Double[],OxyPlot.OxyPenLineJoin,System.Boolean)">
            <summary>
            The draw polygons.
            </summary>
            <param name="polygons">The polygons.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">The aliased.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawRectangle(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawRectangles(System.Collections.Generic.IList{OxyPlot.OxyRect},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a collection of rectangles, where all have the same stroke and fill.
            This performs better than calling DrawRectangle multiple times.
            </summary>
            <param name="rectangles">The rectangles.</param>
            <param name="fill">The fill.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            The draw text.
            </summary>
            <param name="p">The p.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotate.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The text size.</returns>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.SetToolTip(System.String)">
            <summary>
            Sets the tool tip for the following items.
            </summary>
            <param name="text">The text in the tooltip.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.DrawImage(OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified portion of the specified <see cref="T:OxyPlot.OxyImage"/> at the specified location and with the specified size.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.SetClip(OxyPlot.OxyRect)">
            <summary>
            Sets the clip rectangle.
            </summary>
            <param name="clippingRect">The clipping rectangle.</param>
            <returns>True if the clip rectangle was set.</returns>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.ResetClip">
            <summary>
            Resets the clip rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.CleanUp">
            <summary>
            Cleans up resources not in use.
            </summary>
            <remarks>This method is called at the end of each rendering.</remarks>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.CreateDashArrayCollection(System.Collections.Generic.IList{System.Double})">
            <summary>
            Creates the dash array collection.
            </summary>
            <param name="dashArray">The dash array.</param>
            <returns>The dash collection.</returns>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.GetFontWeight(System.Double)">
            <summary>
            Converts a font weight value to a FontWeight.
            </summary>
            <param name="fontWeight">The font weight value.</param>
            <returns>The font weight.</returns>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.Add(Windows.UI.Xaml.UIElement,System.Double,System.Double)">
            <summary>
            Adds the specified shape to the canvas.
            </summary>
            <param name="element">The element.</param>
            <param name="clipOffsetX">The clip offset X.</param>
            <param name="clipOffsetY">The clip offset Y.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.GetCachedBrush(OxyPlot.OxyColor)">
            <summary>
            Gets a brush from the cache or creates a new one.
            </summary>
            <param name="stroke">The stroke.</param>
            <returns>The brush.</returns>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.SetStroke(Windows.UI.Xaml.Shapes.Shape,OxyPlot.OxyColor,System.Double,OxyPlot.OxyPenLineJoin,System.Double[],System.Boolean)">
            <summary>
            Sets the stroke properties of the specified shape.
            </summary>
            <param name="shape">The shape.</param>
            <param name="stroke">The stroke.</param>
            <param name="thickness">The thickness.</param>
            <param name="lineJoin">The line join.</param>
            <param name="dashArray">The dash array.</param>
            <param name="aliased">The aliased.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.ApplyClip(Windows.UI.Xaml.UIElement,System.Double,System.Double)">
            <summary>
            Applies the clip rectangle.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x offset of the element.</param>
            <param name="y">The y offset of the element.</param>
        </member>
        <member name="M:OxyPlot.Metro.MetroRenderContext.GetImageSource(OxyPlot.OxyImage)">
            <summary>
            Gets the bitmap source.
            </summary>
            <param name="image">The image.</param>
            <returns>The bitmap source.</returns>
        </member>
        <member name="P:OxyPlot.Metro.MetroRenderContext.RendersToScreen">
            <summary>
            Gets a value indicating whether the context renders to screen.
            </summary>
            <value><c>true</c> if the context renders to screen; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:OxyPlot.Metro.TrackerControl">
            <summary>
            Provides a tracker control.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.PartPath">
            <summary>
            The path part.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.PartContent">
            <summary>
            The content part.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.PartContentcontainer">
            <summary>
            The content container part.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.PartHorizontalline">
            <summary>
            The horizontal line part.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.PartVerticalline">
            <summary>
            The vertical line part.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.HorizontalLineVisibilityProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.HorizontalLineVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.VerticalLineVisibilityProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.VerticalLineVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.LineStrokeProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.LineStroke"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.LineExtentsProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.LineExtents"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.LineDashArrayProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.LineDashArray"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.ShowPointerProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.ShowPointer"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.DistanceProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.Distance"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.CanCenterHorizontallyProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.CanCenterHorizontally"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.CanCenterVerticallyProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.CanCenterVertically"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.PositionProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerControl.Position"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.horizontalLine">
            <summary>
            The horizontal line.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.path">
            <summary>
            The path.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.contentContainer">
            <summary>
            The content container.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerControl.verticalLine">
            <summary>
            The vertical line.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Metro.TrackerControl"/> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.PositionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the position is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.OnPositionChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the position is changed.
            </summary>
            <param name="e">The dependency property changed event args.</param>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.UpdatePositionAndBorder">
            <summary>
            Update the position and border of the tracker.
            </summary>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.CreateBorderGeometry(Windows.UI.Xaml.HorizontalAlignment,Windows.UI.Xaml.VerticalAlignment,System.Double,System.Double,Windows.UI.Xaml.Thickness@)">
            <summary>
            Create the border geometry.
            </summary>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="margin">The margin.</param>
            <returns>The border geometry.</returns>
        </member>
        <member name="M:OxyPlot.Metro.TrackerControl.CreatePointerBorderGeometry(Windows.UI.Xaml.HorizontalAlignment,Windows.UI.Xaml.VerticalAlignment,System.Double,System.Double,Windows.UI.Xaml.Thickness@)">
            <summary>
            Creates a border geometry with a 'pointer'.
            </summary>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="margin">The margin.</param>
            <returns>The border geometry.</returns>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.HorizontalLineVisibility">
            <summary>
            Gets or sets HorizontalLineVisibility.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.VerticalLineVisibility">
            <summary>
            Gets or sets VerticalLineVisibility.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.LineStroke">
            <summary>
            Gets or sets LineStroke.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.LineExtents">
            <summary>
            Gets or sets LineExtents.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.LineDashArray">
            <summary>
            Gets or sets LineDashArray.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.ShowPointer">
            <summary>
            Gets or sets a value indicating whether to show a 'pointer' on the border.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.CornerRadius">
            <summary>
            Gets or sets the corner radius (only used when ShowPoint=<c>false</c>).
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.Distance">
            <summary>
            Gets or sets the distance of the content container from the trackers Position.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.CanCenterHorizontally">
            <summary>
            Gets or sets a value indicating whether the tracker can center its content box horizontally.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.CanCenterVertically">
            <summary>
            Gets or sets a value indicating whether the tracker can center its content box vertically.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerControl.Position">
            <summary>
            Gets or sets Position of the tracker.
            </summary>
        </member>
        <member name="T:OxyPlot.Metro.TrackerDefinition">
            <summary>
            Represents a tracker definition.
            </summary>
            <remarks>The tracker definitions make it possible to show different trackers for different series.
            The <see cref="P:OxyPlot.Series.Series.TrackerKey"/> property is matched with the <see cref="P:OxyPlot.Metro.TrackerDefinition.TrackerKey"/>
            in the TrackerDefinitions collection in the <see cref="T:OxyPlot.Metro.PlotView"/> control.</remarks>
        </member>
        <member name="F:OxyPlot.Metro.TrackerDefinition.TrackerKeyProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerDefinition.TrackerKey"/> dependency property.
            </summary>
        </member>
        <member name="F:OxyPlot.Metro.TrackerDefinition.TrackerTemplateProperty">
            <summary>
            Identifies the <see cref="P:OxyPlot.Metro.TrackerDefinition.TrackerTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:OxyPlot.Metro.TrackerDefinition.TrackerKey">
            <summary>
            Gets or sets the tracker key.
            </summary>
            <remarks>The Plot will use this property to find the TrackerDefinition that matches the TrackerKey of the current series.</remarks>
        </member>
        <member name="P:OxyPlot.Metro.TrackerDefinition.TrackerTemplate">
            <summary>
            Gets or sets the tracker template.
            </summary>
            <remarks>The tracker control will be added/removed from the Tracker overlay as necessary.
            The DataContext of the tracker will be set to a TrackerHitResult with the current tracker data.</remarks>
        </member>
    </members>
</doc>
